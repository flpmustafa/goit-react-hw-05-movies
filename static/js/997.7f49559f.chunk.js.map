{"version":3,"file":"static/js/997.7f49559f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","pages/CastPage/CastPage.jsx","servises/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list_cast\":\"Cast_list_cast__r74xQ\",\"img_cast\":\"Cast_img_cast__ut1QW\",\"item_cast\":\"Cast_item_cast__HSRyG\",\"cast_name\":\"Cast_cast_name__2eJYI\",\"cast_descr\":\"Cast_cast_descr__gyaTF\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from 'components/Cast/Cast.module.css';\n\n\nconst CastList = data => {\n  const cast = data;\n\n  return (\n    <ul className={css.list_cast}>\n      {cast.data && cast.data.length ? (\n        cast.data.map(cast => (\n          <li key={cast.id}\n            className={css.item_cast}\n          >\n            { cast.profile_path === null ? (\n              <img\n                className={css.img_cast}\n                src={`https://www.csaff.org/wp-content/uploads/csaff-no-poster.jpg`}\n                alt={cast.name} />\n            ) : (\n                <img\n                className={css.img_cast}\n                src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n                alt={cast.name}\n                />\n            )\n              \n            }\n            <p className={css.cast_name}>{cast.name}</p>\n            <p className={css.cast_descr}>Character: {cast.character}</p>\n          </li>\n        ))\n      ) : (\n          <li key=\"noInfo\">Sorry, no cast has been added yet</li>\n      )}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default CastList;","import { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCasts } from 'servises/api';\nimport Spinner from 'components/Loader/Spinner';\nimport CastList from 'components/Cast/Cast';\n\nconst CastPage = () => {\n  const { id } = useParams();\n  const [castData, setCasts] = useState({});\n  const [isLoading, setLoading] = useState(false);\n\n  const castContainer = useRef();\n\n  useEffect(() => {\n    if (id) {\n      setLoading(true);\n      getCasts(id)\n        .then(data => setCasts(data))\n        .catch(function (error) {\n          console.log('Error: ' + error);\n        })\n        .finally(() => {\n          setTimeout(() => {\n            setLoading(false);\n            //castContainer.current.scrollIntoView({ behavior: 'smooth' });\n          }, 500);\n        });\n    }\n  }, [id]);\n\n  return (\n    <div ref={castContainer}>\n      {isLoading ? <Spinner /> : <CastList data={castData.cast} />}\n    </div>\n  );\n};\n\nexport default CastPage;","import axios from 'axios';\n//const parameters\nconst API_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = '29a0f9958f515e94b4a8a68d70519f1b';\n\n//Trends\nconst trending = 'trending';\nconst mediaType = 'movie';\nconst timeWindow = 'day';\n\nconst getFilmsTrends = async () => {\n  const filmsTrends = await axios.get(`\n  ${API_URL}/${trending}/${mediaType}/${timeWindow}?api_key=${API_KEY}\n  `);\n  const trends = filmsTrends.data.results.map(\n    ({ id, title, poster_path, vote_average }) => {\n      return { id, title, poster_path, vote_average };\n    }  \n      );\n  return trends;\n}\n\n    // Move Details\nconst getMoveDetails = async id => {\n  let moveId = await axios.get(`${API_URL}/${mediaType}/${id}?api_key=${API_KEY}&language=en-US`);\n  return moveId.data;\n};\n\n// Seach films\nconst search = 'search';\nconst getFilmsSeach = async query => { \n  const filmsSeach = await axios.get(`${API_URL}/${search}/${mediaType}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n  return filmsSeach.data.results;\n}\n\n// Cast\nconst getCasts = async id => {\n  const casts = await axios.get(`${API_URL}/${mediaType}/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return casts.data;\n};\n\n// Review\nconst getReviews = async id => {\n  const reviewsRes = await axios.get(`${API_URL}/${mediaType}/${id}/reviews?api_key=${API_KEY}`);\n  const reviews = reviewsRes.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n  return reviews;\n};\n\nexport { getFilmsTrends, getMoveDetails, getFilmsSeach, getCasts, getReviews };"],"names":["data","cast","className","css","length","map","profile_path","src","alt","name","character","id","useParams","useState","castData","setCasts","isLoading","setLoading","castContainer","useRef","useEffect","getCasts","then","catch","error","console","log","finally","setTimeout","ref","Spinner","Cast","API_URL","API_KEY","mediaType","getFilmsTrends","axios","filmsTrends","trends","results","title","poster_path","vote_average","getMoveDetails","moveId","getFilmsSeach","query","filmsSeach","casts","getReviews","reviewsRes","reviews","author","content"],"sourceRoot":""}